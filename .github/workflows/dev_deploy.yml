name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Make application-umc72th.yml
        run: |
          echo "${{ secrets.APPLICATION_YML }}" > application-umc72th.yml

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        uses: gradle/gradle-build-action@v2
        with:
          arguments: build -x test  # 테스트 무시 (필요한 경우)

      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: umc72thServer
          path: build/libs/*.jar

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: umc72thServer
          path: build/libs/

      - name: Deploy to EC2
        env:
          EC2_SSH_KEY: ${{ secrets.EC2_SSH_KEY }}
          EC2_USERNAME: ${{ secrets.EC2_USERNAME }}
          EC2_HOST: ${{ secrets.EC2_HOST }}
        run: |
          echo "$EC2_SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          jar_file=$(find build/libs -name '*.jar' ! -name '*plain.jar' | head -n 1)
          scp -i private_key.pem -o StrictHostKeyChecking=no "$jar_file" $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/umc72thServer.jar
          scp -i private_key.pem -o StrictHostKeyChecking=no ./application-umc72th.yml $EC2_USERNAME@$EC2_HOST:/home/$EC2_USERNAME/application-umc72th.yml
          ssh -i private_key.pem -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST "
            pgrep java | xargs -r kill -15
            sleep 10
            nohup java -jar /home/$EC2_USERNAME/umc72thServer.jar --spring.config.location=/home/$EC2_USERNAME/application-umc72th.yml > app.log 2>&1 &
          "
          rm -f private_key.pem
